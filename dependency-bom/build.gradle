plugins {
    id 'java-platform'
    id 'maven-publish'
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

javaPlatform {
    allowDependencies()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "io.grpc:grpc-bom:${grpcVersion}"
    }
}

dependencies {
    constraints {
        it.add("api", "org.apache.avro:avro:${avroVersion}")
        it.add("api", "org.apache.avro:avro:${avroVersion}")
        it.add("api", "io.confluent:kafka-avro-serializer:${kafkaAvroSerializerVersion}")
        it.add("api", "com.google.guava:guava:${guavaVersion}")
        it.add("api", "com.google.protobuf:protobuf-java:${protobufVersion}")
        it.add("api", "org.apache.commons:commons-collections4:${commonCollection4Version}")
        it.add("api", "com.squareup.okhttp3:okhttp:${okhttpVersion}")
        it.add("api", "dev.failsafe:failsafe:${failsafeVersion}")
        it.add("api", "org.apache.tika:tika-core:${apacheTikaVersion}")
    }
}

publishing {
    publications {
        create("release", MavenPublication) {
            from components["javaPlatform"] as SoftwareComponent

            groupId = "com.safestorage"
            artifactId = "dependency-bom"
            version = "1.0.0"

            pom {
                name.set("SafeStorage Dependency BOM")
                description.set("Bill of Materials (BOM) providing centralized, consistent dependency versions for SafeStorage projects.")

                licenses {
                    license {
                        name.set("The Apache License, Version 2.0")
                        url.set("https://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }

                developers {
                    developer {
                        id.set("safestorage-dev")
                        name.set("SafeStorage Team")
                        email.set("dev@safestorage.com")
                    }
                }
            }
        }
    }

    // Call the shared publishing configuration
    configurePublishingRepositories(delegate)
}